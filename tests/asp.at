AT_BANNER([ASP library])

# README:
# If OVS_VSWITCHD_STOP is not brought to work, use following and manually shutdown application
#   OVS_APP_EXIT_AND_WAIT([ovs-vswitchd])
#   OVS_APP_EXIT_AND_WAIT([ovsdb-server])
# For more information about the bytes we are sending, have a look:
#   BUNDLE_CONTROL:
        # (duplicate notes to tickets.md!): 
        # Open OF v1.4(0x05), OFPT_BUNDLE_CONTROL (0x21), length (0x10), bundle id (0x89abcdef):
        # Byte 1:   OF Version (v4=0x05)
        # Byte 2:   Message Type (e.g. OFPT_BUNDLE_CONTROL=0x21 / OFPT_GET_ASYNC_REQUEST=0x1a, flow-mod=0x22)
        # Byte 3-4: message length in bytes
        # Byte 5-8: xid
        # Byte 9-12:bundleid 
        # Byte 13:  Cookie
        # Byte 14:  Control_type(open=00, close=02, commit=04)
        # Byte 15-16:TODO (flags? "ordered"=00 03, "0x130"=01 31)
#   BUNDLE_ADD with FLOW_MOD_STRICT:
        # FlowMod (duplicate notes to tickets.md!): 
        # Byte 2:   Msg Type (bundle_add 0x22)
        # Byte 18:  Msg Type (flow_mod=0e)
        # Byte 21-24:xid (again)
        # Byte 25-32:cookie
        # Byte 33-40: ?? No Impact. TODO
        # Byte 41:  table_id (todo error when ff)
        # Byte 42:  command (ADD=0, MOD=1, MOD_STRICT=2)
        # Byte 43-44: Idle Timeout
        # Byte 45-46: Hard Timeout
        # Byte 66:  ??
        # Byte 76:  in_port
        # Byte 146: arp_tpa last byte



AT_SETUP([ASP - VoteLock (OpenFlow 1.4)])
OVS_VSWITCHD_START

# TODO
# - How to check whether lock is set -> in Logs and the fact that it does not return an error message
# - How to check whether staging area is created?
# - Send Bundle and make sure switch answers with a confirm.

# Start a monitor, use the required protocol version
ovs-ofctl -O OpenFlow14 monitor br0 --detach --no-chdir --pidfile >monitor.log 2>&1
AT_CAPTURE_FILE([monitor.log])

ovs-appctl time/stop

# BUNDLE_CONTROL OPEN
ovs-appctl -t ovs-ofctl ofctl/send "\
05 21 00 10 01 02 03 04 89 ab cd ef 00 00 00 03"
# BUNDLE_ADD FLOW_MOD_STRICT
ovs-appctl -t ovs-ofctl ofctl/send "\
05 22 00 a0 01 02 03 04 89 ab cd ef 00 00 00 03 \
05 0e 00 90 01 02 03 04 00 00 00 00 00 00 00 00 \
00 00 00 00 00 00 00 00 ff 02 00 00 00 00 ff ff \
ff ff ff ff ff ff ff ff ff ff ff ff 00 00 00 00 \
00 01 00 42 80 00 00 04 00 00 00 01 80 00 08 06 \
50 54 00 00 00 06 80 00 06 06 50 54 00 00 00 05 \
80 00 0a 02 08 06 80 00 0c 02 00 00 80 00 2a 02 \
00 02 80 00 2c 04 c0 a8 00 02 80 00 2e 04 c0 a8 \
00 01 00 00 00 00 00 00 00 04 00 18 00 00 00 00 \
00 00 00 10 00 00 00 03 00 00 00 00 00 00 00 00 \
"
# BUNDLE_CONTROL COMMIT
ovs-appctl -t ovs-ofctl ofctl/send "\
05 21 00 10 01 02 03 04 89 ab cd ef 00 04 00 03"
ovs-appctl -t ovs-ofctl ofctl/barrier

OVS_APP_EXIT_AND_WAIT([ovs-ofctl])

AT_CHECK([cat monitor.log], [], [dnl
send: OFPT_BUNDLE_CONTROL (OF1.4) (xid=0x1020304):
 bundle_id=0x89abcdef type=OPEN_REQUEST flags=atomic ordered
OFPT_BUNDLE_CONTROL (OF1.4) (xid=0x1020304):
 bundle_id=0x89abcdef type=OPEN_REPLY flags=0
send: OFPT_BUNDLE_ADD_MESSAGE (OF1.4) (xid=0x1020304):
 bundle_id=0x89abcdef flags=atomic ordered
OFPT_FLOW_MOD (OF1.4) (xid=0x1020304): MOD_STRICT table:255 priority=65535,arp,in_port=1,vlan_tci=0x0000/0x1fff,dl_src=50:54:00:00:00:06,dl_dst=50:54:00:00:00:05,arp_spa=192.168.0.2,arp_tpa=192.168.0.1,arp_op=2 actions=output:3
send: OFPT_BUNDLE_CONTROL (OF1.4) (xid=0x1020304):
 bundle_id=0x89abcdef type=COMMIT_REQUEST flags=atomic ordered
OFPT_BUNDLE_CONTROL (OF1.4) (xid=0x1020304):
 bundle_id=0x89abcdef type=COMMIT_REPLY flags=0
OFPT_BARRIER_REPLY (OF1.4) (xid=0x4):
])

OVS_VSWITCHD_STOP(["
/My: Bundle Add FlowMod Command: 2 with tableid: 255 and xid: 67305985/d
/My: current_xid: 67305985/d
"])
AT_CLEANUP















AT_SETUP([ASP - Rollback (OpenFlow 1.4)])
OVS_VSWITCHD_START

# TODO
# - How to check whether lock is freed?
# - How to check whether staging area is removed after rollback?
# - Send a bundle that is not successfull (returns with reject)
# - send Rollback and make sure the switch answers with Finish. 

# Start a monitor, use the required protocol version
ovs-ofctl -O OpenFlow14 monitor br0 --detach --no-chdir --pidfile >monitor.log 2>&1
AT_CAPTURE_FILE([monitor.log])

ovs-appctl time/stop
# More info in: ovsdb-server.log
# Raw Messages in ofproto.at:5343,5408

ovs-appctl -t ovs-ofctl ofctl/send "\
05 0e 00 90 01 02 03 04 00 00 00 00 00 00 00 00 \
00 00 00 00 00 00 00 00 ff 04 00 00 00 00 ff ff \
ff ff ff ff ff ff ff ff ff ff ff ff 00 00 00 00 \
00 01 00 42 80 00 00 04 00 00 00 01 80 00 08 06 \
50 54 00 00 00 06 80 00 06 06 50 54 00 00 00 05 \
80 00 0a 02 08 06 80 00 0c 02 00 00 80 00 2a 02 \
00 02 80 00 2c 04 c0 a8 00 02 80 00 2e 04 c0 a8 \
00 01 00 00 00 00 00 00 00 04 00 18 00 00 00 00 \
00 00 00 10 00 00 00 03 00 00 00 00 00 00 00 00 \
"
ovs-appctl -t ovs-ofctl ofctl/barrier
OVS_APP_EXIT_AND_WAIT([ovs-ofctl])

# Check if anyting was alright.
AT_CHECK([print_vconn_debug | vconn_sub | ofctl_strip], [0], [dnl
vconn|DBG|unix: sent (Success): OFPT_HELLO (OF1.6):
 version bitmap: 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07
vconn|DBG|unix: received: OFPT_HELLO (OF1.4):
 version bitmap: 0x05
vconn|DBG|unix: negotiated OpenFlow version 0x05 (we support version 0x07 and earlier, peer supports version 0x05)
vconn|DBG|unix: received: NXT_SET_PACKET_IN_FORMAT (OF1.4): format=nxt_packet_in2
vconn|DBG|unix: received: OFPT_BARRIER_REQUEST (OF1.4):
vconn|DBG|unix: sent (Success): OFPT_BARRIER_REPLY (OF1.4):
vconn|DBG|unix: received: OFPT_FLOW_MOD (OF1.4): DEL_STRICT table:255 priority=65535,arp,in_port=1,vlan_tci=0x0000/0x1fff,dl_src=50:54:00:00:00:06,dl_dst=50:54:00:00:00:05,arp_spa=192.168.0.2,arp_tpa=192.168.0.1,arp_op=2 actions=output:3
vconn|DBG|unix: sent (Success): OFPT_ERROR (OF1.4): OFPFMFC_UNKNOWN
OFPT_FLOW_MOD (OF1.4):
(***truncated to 64 bytes from 144***)
00000000  05 0e 00 90 01 02 03 04-00 00 00 00 00 00 00 00 |................|
00000010  00 00 00 00 00 00 00 00-ff 04 00 00 00 00 ff ff |................|
00000020  ff ff ff ff ff ff ff ff-ff ff ff ff 00 00 00 00 |................|
00000030  00 01 00 42 80 00 00 04-00 00 00 01 80 00 08 06 |...B............|
vconn|DBG|unix: received: OFPT_BARRIER_REQUEST (OF1.4):
vconn|DBG|unix: sent (Success): OFPT_BARRIER_REPLY (OF1.4):
])

AT_CHECK([grep " flow_mods in the last " ovs-vswitchd.log | sed -e 's/^.*connmgr|INFO|//'], [0], [dnl
])


OVS_VSWITCHD_STOP(["
/My: Rollback: Reseting current_xid to 0/d
"])
AT_CLEANUP













AT_SETUP([ASP - Commit (OpenFlow 1.4)])
OVS_VSWITCHD_START

# TODO
# - How to check whether lock is freed?
# - How to check whether staging area is activated after commit?
# - Send a bundle that is successfull (returns with confirm)
# - Send Commit and make sure the switch answers with Finish. 

# Start a monitor, use the required protocol version
ovs-ofctl -O OpenFlow14 monitor br0 --detach --no-chdir --pidfile >monitor.log 2>&1
AT_CAPTURE_FILE([monitor.log])

ovs-appctl time/stop
# More info in: ovsdb-server.log
# Raw Messages in ofproto.at:5343,5408

ovs-appctl -t ovs-ofctl ofctl/send "\
05 0e 00 90 01 02 03 04 00 00 00 00 00 00 00 00 \
00 00 00 00 00 00 00 00 ff 03 00 00 00 00 ff ff \
ff ff ff ff ff ff ff ff ff ff ff ff 00 00 00 00 \
00 01 00 42 80 00 00 04 00 00 00 01 80 00 08 06 \
50 54 00 00 00 06 80 00 06 06 50 54 00 00 00 05 \
80 00 0a 02 08 06 80 00 0c 02 00 00 80 00 2a 02 \
00 02 80 00 2c 04 c0 a8 00 02 80 00 2e 04 c0 a8 \
00 01 00 00 00 00 00 00 00 04 00 18 00 00 00 00 \
00 00 00 10 00 00 00 03 00 00 00 00 00 00 00 00 \
"
ovs-appctl -t ovs-ofctl ofctl/barrier
OVS_APP_EXIT_AND_WAIT([ovs-ofctl])

# Check if anyting was alright.
AT_CHECK([print_vconn_debug | vconn_sub | ofctl_strip], [0], [dnl
vconn|DBG|unix: sent (Success): OFPT_HELLO (OF1.6):
 version bitmap: 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07
vconn|DBG|unix: received: OFPT_HELLO (OF1.4):
 version bitmap: 0x05
vconn|DBG|unix: negotiated OpenFlow version 0x05 (we support version 0x07 and earlier, peer supports version 0x05)
vconn|DBG|unix: received: NXT_SET_PACKET_IN_FORMAT (OF1.4): format=nxt_packet_in2
vconn|DBG|unix: received: OFPT_BARRIER_REQUEST (OF1.4):
vconn|DBG|unix: sent (Success): OFPT_BARRIER_REPLY (OF1.4):
vconn|DBG|unix: received: OFPT_FLOW_MOD (OF1.4): DEL table:255 priority=65535,arp,in_port=1,vlan_tci=0x0000/0x1fff,dl_src=50:54:00:00:00:06,dl_dst=50:54:00:00:00:05,arp_spa=192.168.0.2,arp_tpa=192.168.0.1,arp_op=2 actions=output:3
vconn|DBG|unix: sent (Success): OFPT_ERROR (OF1.4): OFPFMFC_UNKNOWN
OFPT_FLOW_MOD (OF1.4):
(***truncated to 64 bytes from 144***)
00000000  05 0e 00 90 01 02 03 04-00 00 00 00 00 00 00 00 |................|
00000010  00 00 00 00 00 00 00 00-ff 03 00 00 00 00 ff ff |................|
00000020  ff ff ff ff ff ff ff ff-ff ff ff ff 00 00 00 00 |................|
00000030  00 01 00 42 80 00 00 04-00 00 00 01 80 00 08 06 |...B............|
vconn|DBG|unix: received: OFPT_BARRIER_REQUEST (OF1.4):
vconn|DBG|unix: sent (Success): OFPT_BARRIER_REPLY (OF1.4):
])

AT_CHECK([grep " flow_mods in the last " ovs-vswitchd.log | sed -e 's/^.*connmgr|INFO|//'], [0], [dnl
])


OVS_VSWITCHD_STOP(["
/My: Commit: Reseting current_xid to 0/d
"])
AT_CLEANUP











AT_SETUP([ASP - Force Reject ConflictRules (OpenFlow 1.4)])
AT_KEYWORDS([monitor])
OVS_VSWITCHD_START

# TODO
# - How to check if the switch really rejected due to conflicting rules?
# - Send a bundle before that sets special rules.
# - Send another bundle that then wants to add rules that will conflict with the rules from before.

# Start a monitor, use the required protocol version
ovs-ofctl -O OpenFlow14 monitor br0 --detach --no-chdir --pidfile >monitor.log 2>&1
AT_CAPTURE_FILE([monitor.log])

ovs-appctl time/stop
# More info in: ovsdb-server.log
# Raw Messages in ofproto.at:5343,5408

# (duplicate notes to tickets.md!): 
# Open OF v1.4(0x05), OFPT_BUNDLE_CONTROL (0x21), length (0x10), bundle id (0x89abcdef):
# Byte 1:   OF Version (v4=0x05)
# Byte 2:   Message Type (e.g. OFPT_BUNDLE_CONTROL=0x21 / OFPT_GET_ASYNC_REQUEST=0x1a, flow-mod=0x22)
# Byte 3-4: message length in bytes
# Byte 5-8: xid
# Byte 9-12:bundleid 
# Byte 13:  Cookie
# Byte 14:  Control_type(open=00, close=02, commit=04)
# Byte 15-16:TODO (flags? "ordered"=00 03, "0x130"=01 31)
ovs-appctl -t ovs-ofctl ofctl/send "\
05 21 00 10 01 02 03 04 89 ab cd ef 00 00 00 03"
# FlowMod (duplicate notes to tickets.md!): 
# Byte 2:   Msg Type (bundle_add 0x22)
# Byte 18:  Msg Type (flow_mod=0e)
# Byte 21-24:xid (again)
# Byte 25-32:cookie
# Byte 33-40: ?? No Impact. TODO
# Byte 41:  table_id (todo error when ff)
# Byte 42:  command (ADD=0, MOD=1, MOD_STRICT=2)
# Byte 43-44: Idle Timeout
# Byte 45-46: Hard Timeout
# Byte 66:  ??
# Byte 76:  in_port
# Byte 146: arp_tpa last byte
ovs-appctl -t ovs-ofctl ofctl/send "\
05 22 00 a0 01 02 03 04 89 ab cd ef 00 00 00 03 \
05 0e 00 90 01 02 03 04 00 00 00 00 00 00 00 00 \
00 00 00 00 00 00 00 00 ff 02 00 00 00 00 ff ff \
ff ff ff ff ff ff ff ff ff ff ff ff 00 00 00 00 \
00 01 00 42 80 00 00 04 00 00 00 01 80 00 08 06 \
50 54 00 00 00 06 80 00 06 06 50 54 00 00 00 05 \
80 00 0a 02 08 06 80 00 0c 02 00 00 80 00 2a 02 \
00 02 80 00 2c 04 c0 a8 00 02 80 00 2e 04 c0 a8 \
00 01 00 00 00 00 00 00 00 04 00 18 00 00 00 00 \
00 00 00 10 00 00 00 03 00 00 00 00 00 00 00 00 \
"
# Close: 
ovs-appctl -t ovs-ofctl ofctl/send "\
05 21 00 10 01 02 03 04 89 ab cd ef 00 02 00 03"
# Commit: 
ovs-appctl -t ovs-ofctl ofctl/send "\
05 21 00 10 01 02 03 04 89 ab cd ef 00 04 00 03"

ovs-appctl -t ovs-ofctl ofctl/barrier
OVS_APP_EXIT_AND_WAIT([ovs-ofctl])

AT_CHECK([cat monitor.log], [], [dnl
send: OFPT_BUNDLE_CONTROL (OF1.4) (xid=0x1020304):
 bundle_id=0x89abcdef type=OPEN_REQUEST flags=atomic ordered
OFPT_BUNDLE_CONTROL (OF1.4) (xid=0x1020304):
 bundle_id=0x89abcdef type=OPEN_REPLY flags=0
send: OFPT_BUNDLE_ADD_MESSAGE (OF1.4) (xid=0x1020304):
 bundle_id=0x89abcdef flags=atomic ordered
OFPT_FLOW_MOD (OF1.4) (xid=0x1020304): MOD_STRICT table:255 priority=65535,arp,in_port=1,vlan_tci=0x0000/0x1fff,dl_src=50:54:00:00:00:06,dl_dst=50:54:00:00:00:05,arp_spa=192.168.0.2,arp_tpa=192.168.0.1,arp_op=2 actions=output:3
send: OFPT_BUNDLE_CONTROL (OF1.4) (xid=0x1020304):
 bundle_id=0x89abcdef type=CLOSE_REQUEST flags=atomic ordered
OFPT_BUNDLE_CONTROL (OF1.4) (xid=0x1020304):
 bundle_id=0x89abcdef type=CLOSE_REPLY flags=0
send: OFPT_BUNDLE_CONTROL (OF1.4) (xid=0x1020304):
 bundle_id=0x89abcdef type=COMMIT_REQUEST flags=atomic ordered
OFPT_BUNDLE_CONTROL (OF1.4) (xid=0x1020304):
 bundle_id=0x89abcdef type=COMMIT_REPLY flags=0
OFPT_BARRIER_REPLY (OF1.4) (xid=0x4):
])

OVS_VSWITCHD_STOP(["
/My: Bundle Add FlowMod Command: 2 with tableid: 255/d
/My: current_xid: 67305985/d
"])
AT_CLEANUP

























AT_SETUP([ASP - Force Reject LockSet (OpenFlow 1.4)])
AT_KEYWORDS([monitor])
OVS_VSWITCHD_START

# Test 
# - How to check if the switch really rejected due a set lock? -> Log (at the end at STOP)
# - Send a bundle before this one which will acquire and set the lock.
# - Send another bundle which then will reject the update since the lock is set.

# Start a monitor, use the required protocol version
ovs-ofctl -O OpenFlow14 monitor br0 --detach --no-chdir --pidfile >monitor.log 2>&1
AT_CAPTURE_FILE([monitor.log])

ovs-appctl time/stop

# BUNDLE_CONTROL OPEN
ovs-appctl -t ovs-ofctl ofctl/send "\
05 21 00 10 01 02 03 04 89 ab cd ef 00 00 00 03"
# BUNDLE_ADD FLOW_MOD_STRICT
ovs-appctl -t ovs-ofctl ofctl/send "\
05 22 00 a0 01 02 03 04 89 ab cd ef 00 00 00 03 \
05 0e 00 90 01 02 03 04 00 00 00 00 00 00 00 00 \
00 00 00 00 00 00 00 00 ff 02 00 00 00 00 ff ff \
ff ff ff ff ff ff ff ff ff ff ff ff 00 00 00 00 \
00 01 00 42 80 00 00 04 00 00 00 01 80 00 08 06 \
50 54 00 00 00 06 80 00 06 06 50 54 00 00 00 05 \
80 00 0a 02 08 06 80 00 0c 02 00 00 80 00 2a 02 \
00 02 80 00 2c 04 c0 a8 00 02 80 00 2e 04 c0 a8 \
00 01 00 00 00 00 00 00 00 04 00 18 00 00 00 00 \
00 00 00 10 00 00 00 03 00 00 00 00 00 00 00 00 \
"
# BUNDLE_CONTROL COMMIT
ovs-appctl -t ovs-ofctl ofctl/send "\
05 21 00 10 01 02 03 04 89 ab cd ef 00 04 00 03"
ovs-appctl -t ovs-ofctl ofctl/barrier

# Send another to force reject.
# BUNDLE_CONTROL OPEN
ovs-appctl -t ovs-ofctl ofctl/send "\
05 21 00 10 00 00 00 0a 00 00 00 0b 00 00 00 03"
# BUNDLE_ADD FLOW_MOD_STRICT
ovs-appctl -t ovs-ofctl ofctl/send "\
05 22 00 a0 00 00 00 0a 00 00 00 0b 00 00 00 03 \
05 0e 00 90 00 00 00 0a 00 00 00 0b 00 00 00 00 \
00 00 00 00 00 00 00 00 ff 02 00 00 00 00 ff ff \
ff ff ff ff ff ff ff ff ff ff ff ff 00 00 00 00 \
00 01 00 42 80 00 00 04 00 00 00 01 80 00 08 06 \
50 54 00 00 00 06 80 00 06 06 50 54 00 00 00 05 \
80 00 0a 02 08 06 80 00 0c 02 00 00 80 00 2a 02 \
00 02 80 00 2c 04 c0 a8 00 02 80 00 2e 04 c0 a8 \
00 01 00 00 00 00 00 00 00 04 00 18 00 00 00 00 \
00 00 00 10 00 00 00 03 00 00 00 00 00 00 00 00 \
"
# BUNDLE_CONTROL COMMIT
ovs-appctl -t ovs-ofctl ofctl/send "\
05 21 00 10 00 00 00 0a 00 00 00 0b 00 04 00 03"
ovs-appctl -t ovs-ofctl ofctl/barrier

OVS_APP_EXIT_AND_WAIT([ovs-ofctl])

AT_CHECK([cat monitor.log], [], [dnl
send: OFPT_BUNDLE_CONTROL (OF1.4) (xid=0x1020304):
 bundle_id=0x89abcdef type=OPEN_REQUEST flags=atomic ordered
OFPT_BUNDLE_CONTROL (OF1.4) (xid=0x1020304):
 bundle_id=0x89abcdef type=OPEN_REPLY flags=0
send: OFPT_BUNDLE_ADD_MESSAGE (OF1.4) (xid=0x1020304):
 bundle_id=0x89abcdef flags=atomic ordered
OFPT_FLOW_MOD (OF1.4) (xid=0x1020304): MOD_STRICT table:255 priority=65535,arp,in_port=1,vlan_tci=0x0000/0x1fff,dl_src=50:54:00:00:00:06,dl_dst=50:54:00:00:00:05,arp_spa=192.168.0.2,arp_tpa=192.168.0.1,arp_op=2 actions=output:3
send: OFPT_BUNDLE_CONTROL (OF1.4) (xid=0x1020304):
 bundle_id=0x89abcdef type=COMMIT_REQUEST flags=atomic ordered
OFPT_BUNDLE_CONTROL (OF1.4) (xid=0x1020304):
 bundle_id=0x89abcdef type=COMMIT_REPLY flags=0
OFPT_BARRIER_REPLY (OF1.4) (xid=0x4):
send: OFPT_BUNDLE_CONTROL (OF1.4) (xid=0xa):
 bundle_id=0xb type=OPEN_REQUEST flags=atomic ordered
OFPT_BUNDLE_CONTROL (OF1.4) (xid=0xa):
 bundle_id=0xb type=OPEN_REPLY flags=0
send: OFPT_BUNDLE_ADD_MESSAGE (OF1.4) (xid=0xa):
 bundle_id=0xb flags=atomic ordered
OFPT_FLOW_MOD (OF1.4) (xid=0xa): MOD_STRICT table:255 priority=65535,arp,in_port=1,vlan_tci=0x0000/0x1fff,dl_src=50:54:00:00:00:06,dl_dst=50:54:00:00:00:05,arp_spa=192.168.0.2,arp_tpa=192.168.0.1,arp_op=2 actions=output:3
OFPT_ERROR (OF1.4) (xid=0xa): OFPBFC_MSG_FAILED
OFPT_BUNDLE_ADD_MESSAGE (OF1.4) (xid=0xa):
(***truncated to 64 bytes from 160***)
00000000  05 22 00 a0 00 00 00 0a-00 00 00 0b 00 00 00 03 |."..............|
00000010  05 0e 00 90 00 00 00 0a-00 00 00 0b 00 00 00 00 |................|
00000020  00 00 00 00 00 00 00 00-ff 02 00 00 00 00 ff ff |................|
00000030  ff ff ff ff ff ff ff ff-ff ff ff ff 00 00 00 00 |................|
send: OFPT_BUNDLE_CONTROL (OF1.4) (xid=0xa):
 bundle_id=0xb type=COMMIT_REQUEST flags=atomic ordered
OFPT_BUNDLE_CONTROL (OF1.4) (xid=0xa):
 bundle_id=0xb type=COMMIT_REPLY flags=0
OFPT_BARRIER_REPLY (OF1.4) (xid=0x5):
])

OVS_VSWITCHD_STOP(["
/My: Bundle Add FlowMod Command: 2 with tableid: 255 and xid: 67305985/d
/My: current_xid: 67305985/d
/My: Bundle Add FlowMod Command: 2 with tableid: 255 and xid: 167772160/d
/My: Lock was already set: xid=67305985 trylock=0/d
"])
AT_CLEANUP
